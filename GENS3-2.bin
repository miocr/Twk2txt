prikazu pred uspesnym ukoncenim cele kompilace, ktera je ¥zrejmaze zpravy: 'Executes n¨'. ÊByla-li ¥zvolena ¥cin¥ost ¥1, ¥vytvori ¥se ¥abecedni ¦seznampouzitych ¥symbolu ¥s ¥prislusnymi ¥hodnotami. ¦Pocet §vstupuzobrazenych na jedne radce muze byt zmenen ¥pomoci ¥POKE ¥'StartGENS 3 + 50' s prislusnou hodnotou; standardni hodnota je 2. çRizeni se nyni vrati do editoru. ÿè2.1 Format as¥embleru ÿ¶Kazdy radek textu generovany GENS 3 ¥ma ¥nasledujici ¥format,kde jsou uvedena prislusna pole: ÿ¨NAVESTI §MNEMONIKA §OPERANDY ªPOZNAMKA ´Start ©LD ®HL,label ª;cteni 'label' do HL ëMezerniky a znaky pro tabelaci (vlozene editorem) jsou obecneignorovany. ÛRadek je zpracovan nasledujicim zpusobem: ·Je vyhodnocen prvni znak radku a nasledujici cin¥ost je ¥zavislana tomto znaku jak je uvedeno dale: ÿ¥';' ¥cely radek je povazovan ¥za ¥poznamku ¥(komentar) ¥t.j. ¥je ¨ignorovan Õ'*' ¥ocekava, ze dalsi znak(y) budou tvorit ¥prikaz ¥as¥embleru. ¨(viz kapitola 2.8). Povazuje vsechny znaky ¥nasledujici ¥za ¨prikazem jako komentar È' ' ¥(znak konce radku) jednoduse ignoruje radek ³' ' ¥(mezera nebo znak tabelace) je-li prvni ¥znak ¥mezera ¥nebo ¨znak tabelace pak GENS 3 predpoklada, ze prvni znak, ¥ktery ¨neni mezera nebo tab, bude zacatek Z80 mnemoniky ñJe-li prvni znak jiny nez ¥je ¥vyse ¥uvedeno, ¥pak ¥as¥emblerpredpoklada symbol - viz kap. 2.2. ÄPo ¥zpracovani ¥platneho ¥navesti ¥nebo ¥je-li ¥prvni §znakmezera/tab, pak as¥embler hleda dalsi znak ktery neni mezera/taba ocekava, ze to bude bud konec radku nebo zacatek Z80 mnemoniky(viz priloha 2), ktera ma az 4 znaky a je ¥ukoncena ¥mezerou/tabnebo znakem konce radku. Je-li mnemonika platna a vyzaduje jeden¥ebo ¥vice ¥operandu, ¥pak ¥jsou ¥mezery/tab ¥vynechany ¥a §jezpracovano pole operandu. ÍNavesti mohou tvorit samostatny radek; uzitecne ¥pro ¥zvyseniprehlednosti. ÙKomentare mohou byt umisteny kdekoliv za polem operandu ¥nebonema-li mnemonika argument, pak za polem mnemoniky. ð2.2 Navesti ÿÀNavesti predstavuji az 16 bitovou informaci. ·Navesti muze byt pouzito k oznaceni adresy ¥urcite ¥instrukcenebo datove oblasti nebo muze byt uzito ¥jako ¥konstanta ¥pomociprikazu EQU (viz kap. 2.6). ËJe-li navesti prirazena hodnota vetsi nez 8 ¥bitu ¥a ¥pak ¥jepouzito jako 8 bitova konstanta, ohlasi as¥embler chybu. îlabel EQU ¥#1234 ÙLD ¦A,label ÿ³zpusobi hlaseni *ER¥OR* 10 pri druhem prubehu. ¸Navesti muze ¥obsahovat ¥libovolny ¥pocet ¥znaku ¥(viz ¥nize)nicmene pouze prvnich 6 znaku ¥je ¥platnych; ¥techto ¥prvnich ¥6znaku musi byt jednoznacne ¥urceno, ¥jinak ¥navesti ¥nemuze ¥bytrozpoznano (*ER¥OR* 4). Navesti nesmi byt ¥tvoreno ¥rezervovanymslovem (viz priloha 2), ac muze byt jeho soucasti. ´Znaky, ktere mohou tvorit navesti jsou: ¥0-9,$ ¥a ¥A-z. ¥'A-z¥ahrnuji vsechna velka i mala pismena spolu ¥se ¥znaky ¥^,`,_ ¥,[, \ a ]. Zacinat vsak musi pismenem. ¾Nekolik prikladu navesti: ÐLO¥P ßlo¥p ßL[1] ßa âdve^5 ÞLDIR §- neni navesti (rezervovane slovo) ó2.3 Citac adres ÿ¼As¥embler se stara o citac ¥adres ¥tak, ¥ze ¥symbolu ¥v ¥polinavesti je prirazena ¥adresa ¥a ¥symbol ¥je ¥vlozen ¥do ¥tabulkysymbolu. Citac adres muze byt ¥nastaven ¥na ¥libovolnou ¥hodnotuprikazem ORG (viz kap. 2.6). ÊSymbol '$' muze byt pouzit ve vztahu k bezne ¥hodnote ¥citaceadres tzn. LD HL,$+5 zpusobi nastaveni registroveho paru ¥HL ¥nahodnotu o 5 vetsi nez je soucasna hodnota citace adres. ì2.4 Taublka symbolu ÿ¸Pri prvnim pouziti je ¥symbol ¥vlozen ¥do ¥tabulky ¥se ¥dvemaukazateli, ktere pozdeji oznacuji kde je symbol abecedne ¥ulozenmezi ostatnimi v tabukce. Pri ¥prvnim ¥vyskytu ¥symbolu ¥v ¥polinavesti je jeho hodnota (udana citacem adres nebo dana ¥prikazemEQU) vlozena ¥do ¥tabulky ¥symbolu. ¥Jinak ¥je ¥hodnota ¥vlozenajakmile je symbol postupne nalezen v poli navesti. ´Tento typ tabulky symbolu se nazyva binarne ¥vetveny ¥a ¥jehostruktura umoznuje vkladani ¥symbolu ¥a ¥jejich ¥vybirani ¥velmirychle - dulezite u ¥rozsahlych ¥programu. ¥Velikost ¥vstupu ¥sepohybuje od 8 do 13 bytu v zavislosti na delce symbolu. ¯Je-li pri prvnim prubehu symbol definovan ¥vice ¥nez ¥jednou,objevi se chybove ¥hlaseni ¥(*ER¥OR* ¥4) ¥nebot ¥as¥embler ¥nevikterou hodnotu ma priradit symbolu. ÃNeni-li ¥symbolu ¥prirazena ¥hodnota, ¥objevi ¥se ¥na ¦konciprekladu zprava '*WARNING* symbol ¥absent'. ¥Chybejici ¥definicesymbolu vsak neprerusi kompilaci. ÅDo tabulky symbolu se ¥vsak ¥vklada ¥pouze ¥prvnich ¥6 ¥znakusymbolu, aby tabulka nebyla prilis rozsahla. ºNa konci kompilace se objevi zprava, oznamujici kolik ¥pametibylo pouzito tabulkou symbolu behem kompilace - velikost ¥pametiprirazene tabulce muzete upravit ¥na ¥zacatku ¥pri ¥odpovedi ¥nadotaz 'Table:'(viz kapitola 2.0). ÿ§2.5 Vyrazy ÿÁVyrazem je vstup operandu, ktery se sklada bud ¥z ¥jednoduchekonstanty ¥nebo ¥z ¥nekolika ¥konstant ¥od¥elenych §operatory.Definice konstant a operatoru je nasledujici: ¶KONSTANTA ¥dekadicka konstanta napr. 1029 Åhexadecimalni konstanta napr. #405 Ábinarni konstanta napr. %10¦101¥ Âznakova konstanta napr. "a" Ènavesti napr. L1029 Ðrovnez '$' muze byt pouzit jako ¥konstanta ¥k ¥urceni ®hodnoty citace adres. ÃOPERATOR ¦'+' ¥soucet Ø'-' ¥rozdil Ø'&' ¥logicka funkce AND Ì'@' ¥logicka funkce OR Í'!' ¥logicka funkce XOR Ì'*' ¥soucin celych cisel Ë'/' ¥podil celych cisel Ì'?' ¥funkce MOD (a?b=a-(a/b)*b) ùPoznamka: ¥'#' ¥oznacuje ¥zacatek ¥hexadecimalniho ¥cisla, ¦'%'binarniho cisla ¥a ¥'"' ¥znakovou ¥konstantu. ¥Pri ¥cteni ¥cisel(dekadickych, hexadecimalnich nebo binarnich) GENS 3 uvazuje ¥16bitu od ¥nejnizsi ¥hodnoty ¥(tj. ¥MOD ¥65¥36) ¥napr.: ¥70¥16 ¥mahodnotu 4¥80 a #5A2C4 ma hodnotu #A2C4. ¿Siroky sortiment operatoru ¥vsak ¥neumoznuje ¥zavorkovani ¥zaucelem volby priority vypoctu - vyrazy jsou provadeny vzdy zlevadoprava. Operatory '*', '/' a '?' jsou provadeny samostatne ¥prozjednoduseni a ne jako soucast celeho vyrazu, ¥coz ¥by ¥zvetsilorozsah GENS 3. ØJe-li vyraz ¥vlozen ¥v ¥zavorkach, ¥pak ¥predstavuje ¥neprimeadresovani napr. v instrukci LD HL,(loc +5) se naplni registrovypar HL,16 bitovou hodnotou zapsanou na adrese 'loc +5'. ¯Urcite instrukce Z80 (JR ¥a ¥DJNZ) ¥predpokladaji ¥8 ¥bitovouhodnotu - toto ¥se ¥nazyva ¥relativni ¥adresovani. ¥Pri ¥pouzitirelativniho adresovani GENS 3 automaticky odecte hodnotu ¥citaceadres nastaveneho na nasledujici instrukci od hodnoty dane polemoperandu uvazovane instrukce a tak ziska ¥relativni ¥adresu ¥prodanou instrukci. Rozsah pripustnych hodnot pro relativni ¥adresuje -128 az +127. ÖV pripade, ze si prejete namisto toho vlozit primo ¥relativnivzdalenost ¥od ¥citace ¥adres, ¥musite §pouzit §znaku §'$'nasledovaneho pozadovanou hodnotou. ¥Nyni ¥se ¥relativni ¥adresavztahuje primo k hodnote citace adres a tak se hodnota relativniadresy pohybuje v rozmezi -126 az +129 vcetne. õPriklady platnych vyrazu ×#50¦-label Ø%10¥1¥01 ! %101¥ °da %10¦1¥0 »#3456 ? #10¦ ³da #456 ¿4 + 5 * 3 - 8 ³da 19 Á$-label+8 Ú2345/7-1 ¸da 3¥4 À"A"+128 Ü"y"-";"+7 Ú(5 * label - #10¦ & %1§) È17 @ %10¦ ¶da 25 øMezery mohou byt vlozeny mezi konstanty a ¥operatory, ¥nikolivsak uvnitr konstanty. ÐJe-li vysledkem nasobeni absolutni hodnota ¥vetsi ¥nez ¥32767objevi se hlaseni *ER¥OR* 15 zatimco pri ¥deleni ¥nulou ¥ziskamehlaseni *ER¥OR* 14; preplneni je ignorovano. Veskera ¥aritmetikapouziva dvojkovy doplnek, kde vsechna cisla vetsi nez 32767 jsoupovazovana za zaporna napr.: 60§= -5¥36 (60§-65¥36). ë2.6 Ridici povely as¥embleru ÿ¯GENS 3 rozeznava urcite pseudoinstrukce. Tyto ¥ridici ¥povelyas¥embleru, jak jsou nazyvany, nemaji vliv na procesor ¥Z80 ¥prijeho cin¥osti, tj. nejsou prekladany do ¥strojniho ¥kodu, ¥pouzeridi as¥embler pri kompilaci. Tyto cin¥osti svym zpusobem nemajivliv na strojni kod tvoreny GENS 3. ÃPseudoinstrukce jsou sestavovany presne stejne ¥jako ¥vykon¥einstrukce, muze jim predchazet navesti (nutne pro EQU) ¥a ¥mohoubyt nasledovany komentarem. Tyto pseudoinstrukce jsou: íORG ¥vyraz Þnastavi citac adres na ¥hodnotu ¥'vyraz'. ¥Neni-li ¥zvolena ¨cin¥ost 2 nebo 16 a ORG by zpusobil prepsani GENS 3, ¥textu ¨nebo ¥tabulky ¥symbolu, ¥objevi ¥se ¥zprava ¥'Bad ¥ORG' ¦a ¨kompilace ¥se ¥prerusi. ¥Porobneji ¥viz ¥kapitola ¥2.0 ¥jak ¨ovlivnuje cin¥ost 2 a 16 pouziti ORG. ¹EQU ¥vyraz Þmusi predchazet navesti. Priradi navesti ¥hodnotu ¥'vyraz'. ¨Vyraz ¥nemuze ¥obsahovat ¥symbol, ¥kteremu ¥dosud §nebyla ¨prirazena hodnota (*ER¥OR* 13). ¿DEFB vyraz, vyraz,.¦ Ókazdy vyraz je vyhodnocen do 8 bitu; byte na adrese, ¥ktera ¨je v citaci adres je nastaven na hodnotu 'vyraz' a citac se ¨posune o 1. Opakuje se pro kazdy vyraz. ·DEFW vyraz, vyraz,.¦ Ónastavi slovo (2 byte) na adrese, ktera je v ¥citaci ¥adres ¨na hodnotu 'vyraz' a posune citac o 2. Jako prvni se umisti ¨mene vyznamny byte nasledovany vys¥im. Opakuje se pro kazdy ¨vyraz. ØDEFS vyraz Þzvysi hodnotu citace adres o hodnotu 'vyraz' - odpovida to ©rezervovani bloku pameti o velikosti dane hodnotou 'vyraz'.DEFM "s" àdefinuje obsah n bytu v pameti a tyto ¥pak ¥obsahuji ¥ASCI¥ ¨kod retezce ¥"s", ¥kde ¥n ¥je ¥delka ¥retezce ¥a ¥muze ¥byt ¨teoreticky dlouha 1 - 25¥. Prakticky je vsak delka ¥retezce ¨omezena delkou radku editoru. Prvni znak ¥pole ¥operandu ¥- ¨uvozovky - je vyhodnocen jako zacatek retezce a retezec ¥je ¨dan znaky mezi dvema uvozovkami; znak konec radku ma rovnez ¨vyznam konec retezce. ÉENT ¥vyraz Þnastavi ¥startovaci ¥adresu ¥strojniho ¥kodu ¥na §hodnotu ¨'vyraz'- pouziva se ve spojeni s prikazem editoru 'R' ¥(viz ¨kapitola 3). Pro startovaci ¥adresu ¥ne¥xistuje ¥standardni ¨hodnota (default). ÿ±2.7 Podminene pseudoinstrukce ÿ®Podminene ¥pseudoinstrukce ¥umoznuji ¥programatorovi ¦vlozitnebo vynechat urcite casti zdrojoveho textu v ramci kompilace.Tose provadi pouzitim IF,ELSE a END. ÿ¦IF ¥vyraz Þvyhodnoti 'vyraz'. Je-li vysledek ¥nula, ¥pak ¥se ¥neprovede §preklad ¥nasledujicich ¥radku ¥dokud as¥embler ¥nenarazi ¥na §'ELSE' nebo ¥'END'. ¥Je-li ¥hodnota ¥'vyraz' ¥nenulova, ¥pak §pokracuje kompilace normalne. ÂELSE ãTato pseudoinstrukce proste spousti ¥a ¥ukoncuje ¥kompilaci. §Je-li ¥kompilace ¥spustena ¥pred ¥'ELSE' ¥, ¥pak ¦nasleduje §ukonceni a naopak. ÍEND äEND jednoduse spousti kompilaci. ¿Poznamka: ¥Podminene ¥pseudoinstrukce ¥se ¥nesmeji ¥pouzivat ¥vevicenasobnych cyklech; neprovadi se kontrola a pouziti ¥vede ¥naneurcity vysledek. ÿ¶2.8 Prikazy as¥embleru ÿµPrikazy as¥embleru, stejne jako ¥ridici ¥povely, ¥neovlivnujiprocesor Z80 pri cin¥osti, nebot nejsou prelozeny ¥do ¥strojnihokodu. Prikazy as¥embleru zkratka upravuji format. µPrikaz as¥embleru je textovy radek, ktery ¥zacina ¥hvezdickou'*'. âPismeno nasledujici za hvezdickou urcuje druh prikazu a ¥musibyt uvedeno velkym pismenem. Zbytek ¥radku ¥muze ¥byt ¥libovolnytext s vyjimkou prikazu 'L' a 'D', ktere ocekavaji '+' a '-' ¥zaprikazem. ÝExistuji nasledujici prikazy: Ã*E æ(eject) vytvori tri prazdne ¥radky ¥na ¥obrazovce ¥nebo ¥na ¨tiskarne - uzitecne k od¥elovani modulu.